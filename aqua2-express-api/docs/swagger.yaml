swagger: "2.0"
info:
  description: "AQUA2 - Annotation query system db API"
  version: "2.0.0"
  title: "AQUA"
  contact:
    email: "andrew.spriggs@csiro.au"
host: "localhost:4000"
basePath: "/api/v2"
schemes:
  - "http"
tags:
  - name: "totals"
  - name: "samples"
  - name: "seqtypes"
  - name: "seqgroups"
  - name: "sequences"
  - name: "seqstring"
  - name: "search"
paths:
  /totals:
    get:
      tags:
        - "totals"
      summary: "List table totals"
      description: "Returns a pre-calculated count of table rows"
      operationId: "getTotals"
      produces:
        - "application/json"
      responses:
        200:
          description: "Success"
          headers:
            total:
              type: "integer"
              description: "Result size, always 1!"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Totals"
        500:
          description: "Error"
        404:
          description: "Not found"

  /samples:
    get:
      tags:
        - "samples"
      summary: "List samples"
      description: "Returns a detailed list of samples"
      operationId: "getSamples"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/sort"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/offset"
      responses:
        200:
          description: "Success"
          headers:
            total:
              type: "integer"
              description: "Query total for pagination range"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Sample"
        500:
          description: "Error"
        404:
          description: "Not found"

  /samples/{sampleId}:
    get:
      tags:
        - "samples"
      summary: "Find a sample by ID"
      description: "Returns info on a single sample"
      operationId: "getSampleById"
      produces:
        - "application/json"
      parameters:
        - name: "sampleId"
          in: "path"
          description: "ID of sample to return"
          required: true
          type: "integer"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Sample"
        500:
          description: "Error"
        404:
          description: "sampleId not found"

  /seqtypes:
    get:
      tags:
        - "seqtypes"
      summary: "List all sequence types"
      description: "Returns a detailed list of sequence types"
      operationId: "getSeqType"
      produces:
        - "application/json"
      responses:
        200:
          description: "Success"
          headers:
            total:
              type: "integer"
              description: "Query total for pagination range"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/SeqType"
        500:
          description: "Error"
        404:
          description: "Not found"

  /seqtypes/{seqtypeId}:
    get:
      tags:
        - "seqtypes"
      summary: "Find a sequence type by ID"
      description: "Returns info on a single sequence type"
      operationId: "getSeqTypeById"
      produces:
        - "application/json"
      parameters:
        - name: "seqtypeId"
          in: "path"
          description: "ID of seqtype to return"
          required: true
          type: "integer"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SeqType"
        500:
          description: "Error"
        404:
          description: "seqtypeId not found"

  /seqgroups:
    get:
      tags:
        - "seqgroups"
      summary: "List sequence groups/assemblies"
      description: "Returns a detailed list of sequence groups/assemblies"
      operationId: "getSeqGroups"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/sort"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/offset"
      responses:
        200:
          description: "Success"
          headers:
            total:
              type: "integer"
              description: "Query total for pagination range"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/SeqGroup"
        500:
          description: "Error"
        404:
          description: "Not found"

  /seqgroups/{seqgroupId}:
    get:
      tags:
        - "seqgroups"
      summary: "Find a sequence group/assembly by ID"
      description: "Returns info on a single sequence group/assembly"
      operationId: "getSeqGroupById"
      produces:
        - "application/json"
      parameters:
        - name: "seqgroupId"
          in: "path"
          description: "ID of seq group to return"
          required: true
          type: "integer"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SeqGroup"
        500:
          description: "Error"
        404:
          description: "seqgroupId not found"

  /sequences:
    get:
      tags:
        - "sequences"
      summary: "List sequences"
      description: "Returns a detailed list of sequences"
      operationId: "getSequences"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/sort"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/offset"
        - $ref: "#/parameters/filter"
      responses:
        200:
          description: "Success"
          headers:
            total:
              description: "Query total for pagination range"
              type: "integer"
          schema:
            type: "object"
            properties:
              data:
                description: "Sequence table data"
                type: "array"
                items:
                  $ref: "#/definitions/Sequence"

        500:
          description: "Error"
        404:
          description: "sequenceId not found"

  /sequences/{sequenceId}:
    get:
      tags:
        - "sequences"
      summary: "Find a sequence by ID"
      description: "Returns info on a single sequence"
      operationId: "getSequenceById"
      produces:
        - "application/json"
      parameters:
        - name: "sequenceId"
          in: "path"
          description: "ID of sequence to return"
          required: true
          type: "integer"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Sequence"
        500:
          description: "Error"
        404:
          description: "sequenceId not found"
    patch:
      tags:
        - "sequences"
      summary: "Update sequence annotation"
      description: "Update details of a sequence"
      operationId: "patchSequenceById"
      produces:
        - "application/json"
      parameters:
        - name: "sequenceId"
          in: "path"
          description: "ID of sequence to return"
          required: true
          type: "integer"
        - $ref: "#/parameters/seqdata"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Sequence"
        500:
          description: "Error"
        404:
          description: "sequenceId not found"
  /sequences/{seqName}:
    get:
      tags:
        - "sequences"
      summary: "Find a sequence by name"
      description: "Returns info on a single sequence"
      operationId: "getSequenceByName"
      produces:
        - "application/json"
      parameters:
        - name: "seqName"
          in: "path"
          description: "Name of sequence to return"
          required: true
          type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Sequence"
        500:
          description: "Error"
        404:
          description: "sequenceId not found"
  /seqstring/{sequenceId}:
    get:
      tags:
        - "seqstring"
      summary: "Find a sequence string"
      description: "Returns the actual string representng a sequence"
      operationId: "getSeqstringBySeqId"
      produces:
        - "application/json"
      parameters:
        - name: "sequenceId"
          in: "path"
          description: "ID of sequence to return"
          required: true
          type: "integer"
        - name: "start"
          in: "query"
          description: "Start of a sub-seq string to return (counts from 1)"
          required: false
          type: "integer"
        - name: "length"
          in: "query"
          description: "Length of a sub-seq string to return (counts from 1)"
          required: false
          type: "integer"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SeqString"
        500:
          description: "Error"
        404:
          description: "sequenceId not found"
  /search:
    get:
      tags:
        - "search"
      summary: "Keyword search"
      description: "Returns a list of matching sequences or annotations"
      operationId: "getSearch"
      produces:
        - "application/json"
      parameters:
        - name: "searchTerm"
          in: "path"
          description: "Keyword to search for"
          required: true
          type: "string"
        - name: "searchType"
          in: "query"
          description: "Type of search: 'seqs', 'annots', 'all'"
          required: false
          type: "string"
        - $ref: "#/parameters/sort"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/offset"
      responses:
        200:
          description: "Success"
          headers:
            total:
              description: "Query total for pagination range"
              type: "integer"
          schema:
            type: "object"
            properties:
              data:
                description: "Search result"
                type: "array"
                items:
                  $ref: "#/definitions/Search"

        500:
          description: "Error"
        404:
          description: "sequenceId not found"
definitions:
  Totals:
    type: "object"
    properties:
      sample:
        type: "integer"
        description: "Count of total samples"
      seqgroup:
        type: "integer"
        description: "Count of total seq groups"
      sequence:
        type: "integer"
        description: "Count of total sequences"
      seqrelation:
        type: "integer"
        description: "Count of total seq relations"
      alignedannot:
        type: "integer"
        description: "Count of total alignment annotations"
      geneprediction:
        type: "integer"
        description: "Count of total gene predictions"
  Sample:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
        description: "Sample name"
      species:
        type: "string"
        description: "Sample species"
      description:
        type: "string"
        description: "Sample description"
      ingroups:
        type: "integer"
        description: "Sample is in x groups/assemblies"
      numseqs:
        type: "integer"
        description: "Sample has x sequences"
  SeqGroup:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
        description: "SeqGroup name"
      description:
        type: "string"
        description: "SeqGroup description"
      fromsamps:
        type: "integer"
        description: "SeqGroup made from x samples"
      numseqs:
        type: "integer"
        description: "SeqGroup has x sequences"
      avlength:
        type: "integer"
        description: "SeqGroup average sequence length"
      n50length:
        type: "integer"
        description: "SeqGroup n50 sequence length"
      maxlength:
        type: "integer"
        description: "SeqGroup longest sequence length"
  SeqType:
    type: "object"
    properties:
      id:
        type: "integer"
      type:
        type: "string"
        description: "Sequence type"
      numseqs:
        type: "integer"
        description: "SeqType has x sequences"
  Sequence:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
        description: "Sequence name"
      length:
        type: "integer"
        description: "Sequence length (bp)"
      groupId:
        type: "integer"
        description: "ID of seqgroup"
      groupName:
        type: "string"
        description: "Seqgroup label"
      sampleId:
        type: "integer"
        description: "ID of sample"
      sampleName:
        type: "string"
        description: "Sample label"
      typeId:
        type: "integer"
        description: "ID of seqtype"
      typeName:
        type: "string"
        description: "Seqtype label"
      annotNote:
        type: "string"
        description: "Annotation note"
      extLink:
        type: "string"
        description: "Relevant external service link"
      extLinkLabel:
        type: "string"
        description: "Short label for relevant external service link"
  SeqString:
    type: "object"
    properties:
      seqstring:
        type: "string"
        description: "Sequence string"
  Search:
    type: "object"
    properties:
      resultType:
        type: "string"
        description: "'sequence' or 'alignedannot'"
      seqName:
        type: "string"
        description: "Sequence name"
      seqId:
        type: "integer"
        description: "Sequence id"
      seqLength:
        type: "integer"
        description: "Sequence length (bp)"
      seqGroupId:
        type: "integer"
        description: "ID of seqgroup"
      seqGroupName:
        type: "string"
        description: "Seqgroup label"
      seqSampleId:
        type: "integer"
        description: "ID of sample"
      seqSampleName:
        type: "string"
        description: "Sample label"
      seqTypeId:
        type: "integer"
        description: "ID of seqtype"
      seqTypeName:
        type: "string"
        description: "Seqtype label"
      seqAnnot:
        type: "string"
        description: "Annotation note"
      seqExtLink:
        type: "string"
        description: "Relevant external service link"
      seqExtLinkLabel:
        type: "string"
        description: "Short label for relevant external service link"
      alignId:
        type: "integer"
        description: "Aligned annotation id"
      alignName:
        type: "string"
        description: "Aligned annotation name"
      alignStart:
        type: "integer"
        description: "Alignment start on reference sequence"
      alignEnd:
        type: "integer"
        description: "Alignment end on reference sequence"
      alignStrand:
        type: "integer"
        description: "Alignment orientation on reference sequence 1 is +, 0 is -"
      alignSpecies:
        type: "string"
        description: "Aligned annotation species"
      alignSource:
        type: "string"
        description: "Aligned annotation source"
      alignMethod:
        type: "string"
        description: "Alignment method"
      alignScore:
        type: "string"
        description: "Alignment score"
      alignAnnot:
        type: "string"
        description: "Aligned annotation"

parameters:
  sort:
    name: sort
    in: query
    description: Order result by COLNAME (ASC|DESC)
    type: string
  limit:
    name: limit
    in: query
    description: Number of entries returned
    type: integer
  offset:
    name: offset
    in: query
    description: Number of entries to skip
    type: integer
  filter:
    name: filter
    in: query
    description: Where filter={"sample":[1,5],"seqgroup":[3],"seqtype":[2,4]}
    type: string
  seqdata:
    name: data
    in: query
    description: Where data={"annotNote":"Blah"}
    type: object
    properties:
      annotNote:
        type: string
        description: "Sequence annotation or note"
